#!/usr/bin/env python
from MyExecPkg import ExecGit
import sys;
import os;

def print_help():
   print( "help:" )
   print( "\tmy_checkin\n" )
   print( "no arguments" )


def main():

    if(len(sys.argv) > 1 ):
        print_help()
        sys.exit(1)

    #initialize objects
    execgit = ExecGit()

    #git status commamnd - to identify files to be added
    git_status_cmd = ["git", "status", "--porcelain"]
    retCode,retErr,retStr = execgit.execCommand(git_status_cmd)
    listOfFilesAndStatus = retStr.split('\n')
    listOfFilesAndStatus.pop()
    addList = []
    addedList = []
    for item in listOfFilesAndStatus:
        if( item[0] == "?" and item[1] == "?" ):
             item = item[2:]
             item = item.strip()
             addList.append(item)
        elif( item[0] == "A"):
             item = item[2:]
             item = item.strip()
             addedList.append(item)
    
    listOfPackages = []
    for item in addedList:
        splitPath = item.split(os.path.sep)
        #print(splitPath)
        if( len(splitPath) > 1 ):
            listOfPackages.append(splitPath[0])

    setOfPackages = set(listOfPackages)
    for item in setOfPackages:
        filename = item + os.path.sep + "pkg.version"
        #print(item)
        if( retCode == 0 ):
            #print(retStr)
            fd = open(filename, "r")
            version = fd.read()
            fd.close()
            version = version.strip('\n')
            #print(version)
            versionlist = version.split('-')
            versionlistnum = map(lambda x: int(x), versionlist)
            minorchange = map(lambda x: x, versionlistnum)
            minorchange[2] = minorchange[2] + 1
            majorchange = map(lambda x: x, versionlistnum)
            majorchange[0] = majorchange[0] + 1
            midchange = map(lambda x: x, versionlistnum)
            midchange[1] = midchange[1] + 1
            midchangestr = reduce(lambda x,y: str(x) + "-" + str(y), midchange)
            minorchangestr = reduce(lambda x,y: str(x) + "-" + str(y), minorchange)
            majorchangestr = reduce(lambda x,y: str(x) + "-" + str(y), majorchange)
            print("option 0 " + minorchangestr)
            print("option 1 " + midchangestr)
            print("option 2 " + majorchangestr)
            userValueInt = -1
            while (userValueInt < 0 or userValueInt > 2):
               userValue = execgit.getUserValue("Enter option (0,1,2):") 
               userValueInt = int(userValue)
            if( userValueInt == 0 ):
                versionStr = minorchangestr
            elif( userValueInt == 1):
                versionStr = midchangestr
            elif(userValueInt == 2 ):
                versionStr = majorchangestr
            fd = open(filename, "w+")
            fd.write(versionStr)
            fd.close()
        else:
            print("Error: " + filename + " not found")
            sys.exit(-1)

main()
